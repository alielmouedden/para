Q 1 Un bus CORBA est : 
une marque de véhicule de transport scolaire
un moyen logiciel de stockage et de transport de l'information dans une application répartie X
Q 2 Un système réparti est (condition nécessaire mais pas suffisante) : 
un système informatique dans lequel les données sont réparties à différents endroits d'un réseau informatique X
un système informatique dans lequel les données sont centralisées dans une base de données et utilisées de manières distantes.
Q 3Les moyens actuels et modernes de développement d'un système réparti utilisent les notions de la programmation objet
OUI X
NON
Q 4 Les composants d'un système réparti s'exécutent, généralement, d'une manière asynchrone 
OUI
NON X
Q 5 La synchronisation de l'appel d'une méthode distante est indispensable pour centraliser une donnée dans un système réparti composé de plusieurs objets distribués
OUI
NON X
Q 6 La protection aux intrusions extérieures d'un système réparti est bien maîtrisée par les ORB du marché 
OUI
NON X
Q 7 Le service de nommage dans un système distribué CORBA : 
permet de rendre transparent, pour les clients, la localisation des objets distribués sur le réseau X
sert d'intermédiaire de communication entre les clients et les serveurs
centralise les échanges de données via les sockets entre tous les objets distribués du réseau
Q 8 En CORBA, le résultat de la résolution d'un IOR est un objet CORBA 
OUI X
NON
Q 9 En CORBA, la référence d'un objet CORBA est sérialisable 
OUI X
NON
Q 10 image 4 class
Ce schéma montre que l'IHM et son Applicatif associé communiquent via des méthodes distantes
Ce schéma montre que l'interface AppXXXInt contient la description des méthodes que l'applicatif a le droit d'appeler
Ce schéma montre que l'IHM utilise les méthodes d'un applicatif pour réaliser les traitements métiers demandés par l'utilisateur X
Q 11 Le rôle du POA dans une architecture CORBA est notamment de : 
centraliser le traitement des requêtes clientes X
créer, modifier, supprimer un servant X
délocaliser un servant d'une machine à une autre
Q 12 En CORBA, un servant est un objet distribué 
OUI X
NON
Q 13 En RMI, un objet distribué 
est un objet qui hérite de RemoteObject
est un objet qui implémente une interface de méthode distante X
est un objet qui encapsule un objet qui assure la communication
Q 14 Le langage JAVA assure la sérialisation de ces données en utilisant la réflexivité du langage 
OUI X
NON
Q 15 En CORBA, il est indispensable de passer par un service de nommage pour utiliser les méthodes d’un objet distant
OUI
NON X
Q 16 Le rôle de l’ "interface" Java est essentiel dans la conception d’application composée d’une partie représentation (IHM) et d’une partie applicative (métier). Pourquoi ?
Pour faciliter le portage de l'IHM dans différents environnements informatiques X
Pour rendre indépendant le composant logiciel IHM des moyens de communication (Socket, CORBA, RMI, Http, ...) X
Pour imposer une communication distante entre l'IHM et l'Applicatif
Q 17 Ce schéma vu dans le cadre de l’atelier 16 (Architectures n Tiers) décrit les dépendances des composants d'un système informatique
L’applicatif utilise l’interface AppXXXInt afin de communiquer avec l’IHM
L’IHM crée un objet distribué (IhmXXXClient crée IhmXXRmiImp qui à son tour crée AppXXODInt qui est un objet distribué)
L’objet distribué AppXXXOD crée et encapsule l’applicatif X
Q 18 Les principes de communication distante dans un système distribué peuvent être : 
un client reçoit une copie de l’objet distribué distant
un client reçoit une interface de l’objet distribué distant X
un client reçoit un pointeur sur l’objet distribué distant
Q 19 L'adaptateur en Java RMI est un process qui s'exécute en dehors de toute JVM 
OUI
NON X
Q 20 On peut exécuter plusieurs adaptateurs sur une même machine 
OUI X
NON
Q 21 En CORBA, un idl est un fichier écrit dans le langage IDL spécifié par l’OMG 
OUI X
NON
Q 22 Un IDL peut contenir la définition de plusieurs interfaces 
OUI X
NON
Q 23 En Java RMI, l’instruction lookup : 
retourne un stub X
retourne un skeleton
Q 24 En Java RMI, l’instruction bind : 
permet de créer un objet distribué
permet d'enregistrer un objet distribué dans un adaptateur X
alloue un port de communication pour l'objet distribué
Q 25 En CORBA, un service de nommage est utilisé par : 
uniquement les servants qui ont été enregistrés (bind) dans le service de nommage
uniquement les servants de la machine sur lequel le service de nommage a été exécuté
uniquement les servants d’un même VLAN (réseau) X
Q 26 L'IOR d'un objet CORBA est un objet Java prédéfini permettant de se connecter à un objet distribué 
OUI
NON X
Q 27 L'IOR contient les informations de connexion (localisation réseau) d'un objet distribué 
OUI X
NON
Q 28 Le Factory est un servant permettant de créer un objet distribué sur sollicitation distante 
OUI X
NON
Q 29 Un bon système réparti est un système répartie qui semble centralisé mais dont ces composants ne le sont pas
OUI X
NON
Q 30 L'en-tête de déclaration d'une méthode main d'une classe JAVA peut-être: 
static public void main(String args[]) X
static public void main(int nb_args, String args[])
void main(int nb_args, String args[])
Q 31 L'instruction JAVA permettant de lever une exception est: 
throws Exception;
throw new Exception("Erreur"); X
catch (Exception e)
{
System.out.println("Erreur");
}
Q 32 Dans une architecture distribué, un objet distribué peut-il utiliser les services d'un autre objet distribué? 
OUI X
NON
Q 33 Choisir le(s) code(s) correct(s) de la méthode main de GrilleOD.java qui crée l'objet distribué GRILLE 
1 String hostRegistry = args[0];
String portRegistry = Integer.parseInt(args[1]);
urlRegistry="rmi://"+hostRegistry+":"+portRegistry+"/";
Naming.rebind(urlRegistry+"GRILLE");
2 String hostRegistry = args[0];
String portRegistry = Integer.parseInt(args[1]);
Naming.rebind(new GrilleOD(20,20, hostRegistry, portRegistry));
3 String hostRegistry = args[0];
String portRegistry = Integer.parseInt(args[1]);
urlRegistry="rmi://"+hostRegistry+":"+portRegistry+"/";
Naming.rebind(urlRegistry+"GRILLE", new GrilleOD(20,20,urlRegistry)); X
Q 34 Toutes les méthodes distantes d'un objet distribué 
doivent appartenir à la même interface
peuvent appartenir à plusieurs interfaces X
doivent toutes être implémentées dans le même objet distribué X
Q 35 Un ORB du marché, permet de créer un objet distribué à distance 
OUI
NON X
Q 36 CORBA est un logiciel 
OUI
NON X
Q 37 Un ORB est une implémentation de CORBA 
OUI X
NON
Q 38 Le rôle du ORB est de 
sécuriser les échanges de données entre les services
répartir les services et les données X
rendre transparent la localisation des services X
Q 39 Les composants d'un ORB sont : 
un serveur, un client et une interface d'échange
des APIs, un annuaire et un IDL X
Q 40 La sérialisation est utilisé dans les ORB 
OUI X
NON
Q 41 La sérialisation permet d'écrire un objet dans : 
un fichier X
un socket X
une base de donnée
Q 42 La synchronisation des threads entre les objets distribués est indispensable dans un système réparti 
OUI
NON X
Q 43 Une méthode distante d'un serveur qui est utilisée par plusieurs clients doit être synchronisée 
OUI
NON X
Q 44 La synchronisation à outrance des méthodes distantes de tous les objets distribués d'un système réparti, nuit à la performance globale du système informatique
OUI X
NON
Q 45 La communication Web entre un client et un serveur utilise un ORB pour faire l'interface entre 
le client léger d'un navigateur et le serveur Http
le serveur Http et les servlets
les servlets et les services du système d'information X
Q 46 A cause des temps de communication entre les composants d'un système réparti, il est souvent extrêmement difficile de connaître l'état exacte des données réparties dans les différents services
OUI X
NON
Q 47 Des ORB différents ne peuvent pas communiquer entre eux 
OUI
NON X
Q 48 On peut passer en paramètre d'une méthode distante, un objet distribué afin que le client puisse l'utiliser pour utiliser les méthodes distantes de cette objet distribué
OUI
NON X
Q 49 En Java RMI, l'instruction lookup retourne (dans le stub), entre autre, le port utilisé par l'objet distribué pour le traitement des requêtes afin que le client écrivent ses requêtes sur ce port.
OUI X
NON
Q 50 En Java RMI, un objet distribué est un serveur de socket dont le port est déterminé par défaut par la classe UnicastRemoteObject
OUI X
NON
Q 51 Le Factory est un élément qui permet de factoriser la conception des objets distribués 
OUI
NON X
Q 52 Les avantages d'un système répartis sont : 
un système réparti est adapté pour donner une qualité de service identique tant local que distant X
un système réparti d'une grande entreprise industrielle est plus à même d'être sécurisé qu'un système non réparti.
dans un système réparti, il est envisageable de continuer un service même dégradé X
Q 53 Soit la déclaration de la classe suivante :
public class MonThread extends Thread
{
public void run()
{
// traitement du thread
}
}
Pour créer le thread et l'exécuter, il faut faire les instructions suivantes:

1 Runnable p = new Runnable ();
MonThread q = new Thread(p);
q.start();
2 MonThread p = new MonThread ();
p.start(); X
3 MonThread p = (MonThread)(new Thread());
p.start()
Q 54 Un objet passé en paramètre d'une méthode distante est reçu par l'appelant : 
1 sous la forme d'un nouvel objet qui est une copie du paramètre X
2 sous la forme d'une référence du paramètre
Q 55 En CORBA, il est obligatoire d'enregistrer les servants (objets distribués) dans un annuaire (service denommage)
OUI
NON X
Q 56 Soit, un IDL qui contient une interface de nom InterfaceDeviseOD. Cette interface génère une classe utilisée pour créer, par héritage, les servants. Le nom de cette classe est :
InterfaceDeviseODOperations
InterfaceDeviseODPOA X
InterfaceDeviseODHolder
Q 57 La référence d'un objet CORBA contient l'IOR du servant associé 
OUI X
NON
Q 58 L'architecture distribuée suivante est correcte. Le sens de la flèche correspond à l'appel d'une méthode
distante (exemple: OD2-> OD3 : OD2 appelle une méthode distante de OD3). La machine A a un
adaptateur dans lequel OD1 et OD2 se sont enregistrés. La machine B a un adaptateur dans le quel
OD3 et OD4 se sont enregistrés.
Adaptateur A
MACHINE A
OD1 OD2
OD1 OD2
Adaptateur B
MACHINE B
OD1 OD2
OD3 OD4

1 Le nom de l'objet OD1 doit être différent de celui de OD3
2 Le nom de l'objet OD1 doit être différent de celui de OD2 X
3 Si l'adaptateur A est en panne, je peux enregistrer OD1 et OD2 dans l'adaptateur B.
Q 59 Soit deux machines A et B, on crée sur A un objet distribué OA, on crée sur B un objet distribué OB. Les deux objets distribués s'appellent mutuellement des méthodes distantes. Il est possible de :
on crée un seul adaptateur sur A, et OA et OB s'enregistrent dans cet adaptateur
on crée un adaptateur sur A, un autre sur B, et OA s'enregistre dans l'adaptateur de A, et OB s'enregistre dans l'adaptateur de B X
on crée deux adaptateurs sur A, et OA s'enregistre dans l'un et OB dans l'autre
Q 60 En RMI, l'interface d'un objet distribué définit 
les prototypes de toutes les méthodes de l'objet distribué
les prototypes des méthodes distantes de l'objet distribué X